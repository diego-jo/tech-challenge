name: Build and Create PR to Develop

on:
  push:
    branches:
      - 'feature**'
      - 'fix**'
      - 'docs**'
      - 'style**'
      - 'refactor**'
      - 'test**'
      - 'chore**'

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER: eks-tech-challenge

jobs:
#  build:
#    uses: ./.github/workflows/reusable-workflow-build.yml
#
#  create_pull_request:
#    name: Create Pull Request to Develop
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#      pull-requests: write
#      repository-projects: write
#    needs: build
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Get feature branch name
#        run: echo "FEATURE_BRANCH=$(echo ${{ github.ref }} | sed 's/refs\/heads\///')" >> $GITHUB_ENV
#
#      - uses: ./.github/actions/create-pull-request
#        with:
#          source_branch: $FEATURE_BRANCH
#          target_branch: 'develop'
#          github_token: ${{ secrets.GITHUB_TOKEN }}

  #  TODO: alterar para executar depois do merge para main
  deploy:
#    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to EKS cluster
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Login to DockerHub
        run: docker login -u pedroprj -p ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t vwnunes/tech-challenge-61:latest .
          docker push vwnunes/tech-challenge-61

#      - name: Install kubectl
#        uses: azure/setup-kubectl@v2.0
#        with:
#          version: 'v1.27.0'
#        id: install

      - name: Deploy to EKS
        run: |
          kubectl get nodes -v=10
          kubectl apply -f deployment/
#            cat /home/runner/.kube/config && \
#            export KUBECONFIG=~/.kube/config && \
#            kubectl config get-contexts && \
#            kubectl config current-context && \
#            kubectl config use-context arn:aws:eks:us-east-1:244071861643:cluster/${{ env.EKS_CLUSTER }} && \
#            kubectl apply -f deployment/

#      - name: Deploy to EKS
#        uses: silverlyra/setup-aws-eks@v0.1
#        with:
#          cluster: ${{ env.EKS_CLUSTER }}

#      - name: Deploy to EKS
#        uses: nikosch86/github-action-eks-kubectl@main
#        with:
#          command: "apply -f deployment/"
#        env:
#          EKS_CLUSTER: ${{ env.EKS_CLUSTER }}

#      - name: Deploy to EKS
#        uses: tale/kubectl-action@v1
#        with:
#          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
#      - run: kubectl get pods

#      - name: Install and configure kubectl
#        run: |
#          VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
#          curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
#              --progress-bar \
#              --location \
#              --remote-name
#          chmod +x kubectl
#          sudo mv kubectl /usr/local/bin/
#          sudo apt-get install gettext-base

#      - name: Deploy to EKS
#        run: |
#          aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}
#          kubectl apply -f deployment/
